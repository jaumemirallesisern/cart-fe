{"ast":null,"code":"import { initialState } from './model';\nimport * as Actions from './actions';\n\nconst productsListReducer = (state = initialState, action) => {\n  console.log(`Reducer`);\n  console.log(action.type);\n\n  switch (action.type) {\n    case Actions.FETCH_PRODUCTSLIST_REQUEST:\n      console.log(`Request triggered`);\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case Actions.FETCH_PRODUCTSLIST_SUCCESS:\n      console.log(`Received data: ${action.data}`);\n      return { ...state,\n        loading: false,\n        error: false,\n        elements: action.data\n      };\n\n    case Actions.FETCH_PRODUCTSLIST_FAILURE:\n      return { ...state,\n        loading: false,\n        error: true\n      };\n\n    case Actions.INCREMENT_COUNTER:\n      let copyCarti = state.cart;\n      copyCarti.map(e => {\n        e.qty = e.qty + 1;\n        return e;\n      });\n      return { ...state,\n        loading: false,\n        error: true,\n        cart: copyCarti\n      };\n\n    case Actions.DECREMENT_COUNTER:\n      let copyCartd = state.cart;\n      copyCartd.map(e => {\n        if (e.qty > 0) {\n          e.qty = e.qty - 1;\n        }\n\n        ;\n        return e;\n      });\n      return { ...state,\n        loading: false,\n        error: true,\n        cart: copyCartd\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default productsListReducer;","map":{"version":3,"sources":["/home/jaume/src/Projects/cart-fe/src/store/modules/products/reducer.ts"],"names":["initialState","Actions","productsListReducer","state","action","console","log","type","FETCH_PRODUCTSLIST_REQUEST","loading","error","FETCH_PRODUCTSLIST_SUCCESS","data","elements","FETCH_PRODUCTSLIST_FAILURE","INCREMENT_COUNTER","copyCarti","cart","map","e","qty","DECREMENT_COUNTER","copyCartd"],"mappings":"AAAA,SAA4BA,YAA5B,QAA+C,SAA/C;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAyB,GAAGH,YAA7B,EAA2CI,MAA3C,KAAkF;AAC5GC,EAAAA,OAAO,CAACC,GAAR,CAAa,SAAb;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,UAAQH,MAAM,CAACG,IAAf;AAEE,SAAKN,OAAO,CAACO,0BAAb;AACEH,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAb;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYM,QAAAA,OAAO,EAAE,IAArB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAP;;AAEF,SAAKT,OAAO,CAACU,0BAAb;AACEN,MAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBF,MAAM,CAACQ,IAAK,EAA1C;AACA,aAAO,EAAE,GAAGT,KAAL;AAAYM,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAE,KAAnC;AAA0CG,QAAAA,QAAQ,EAAET,MAAM,CAACQ;AAA3D,OAAP;;AAEF,SAAKX,OAAO,CAACa,0BAAb;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYM,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAAP;;AAEF,SAAKT,OAAO,CAACc,iBAAb;AACE,UAAIC,SAAS,GAAGb,KAAK,CAACc,IAAtB;AACAD,MAAAA,SAAS,CAACE,GAAV,CAAeC,CAAC,IAAI;AAClBA,QAAAA,CAAC,CAACC,GAAF,GAAQD,CAAC,CAACC,GAAF,GAAQ,CAAhB;AACA,eAAOD,CAAP;AACD,OAHD;AAIA,aAAO,EAAE,GAAGhB,KAAL;AAAYM,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAE,IAAnC;AAAyCO,QAAAA,IAAI,EAAGD;AAAhD,OAAP;;AAEF,SAAKf,OAAO,CAACoB,iBAAb;AACE,UAAIC,SAAS,GAAGnB,KAAK,CAACc,IAAtB;AACAK,MAAAA,SAAS,CAACJ,GAAV,CAAeC,CAAC,IAAI;AAClB,YAAGA,CAAC,CAACC,GAAF,GAAM,CAAT,EAAY;AACVD,UAAAA,CAAC,CAACC,GAAF,GAAQD,CAAC,CAACC,GAAF,GAAQ,CAAhB;AACD;;AAAA;AACD,eAAOD,CAAP;AACD,OALD;AAMA,aAAO,EAAE,GAAGhB,KAAL;AAAYM,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAE,IAAnC;AAAyCO,QAAAA,IAAI,EAAGK;AAAhD,OAAP;;AAEF;AACE,aAAOnB,KAAP;AAhCJ;AAkCD,CArCD;;AAuCA,eAAeD,mBAAf","sourcesContent":["import {ProductsListDomain, initialState} from './model';\nimport * as Actions from './actions';\n\nconst productsListReducer = (state: ProductsListDomain = initialState, action: Actions.ProductsListAction) => {\n  console.log(`Reducer`);\n  console.log(action.type);\n  switch (action.type) {\n\n    case Actions.FETCH_PRODUCTSLIST_REQUEST:\n      console.log(`Request triggered`);\n      return { ...state, loading: true, error: false };\n\n    case Actions.FETCH_PRODUCTSLIST_SUCCESS:\n      console.log(`Received data: ${action.data}`);\n      return { ...state, loading: false, error: false, elements: action.data };\n\n    case Actions.FETCH_PRODUCTSLIST_FAILURE:\n      return { ...state, loading: false, error: true };\n\n    case Actions.INCREMENT_COUNTER:\n      let copyCarti = state.cart;\n      copyCarti.map( e => {\n        e.qty = e.qty + 1;\n        return e;\n      } );\n      return { ...state, loading: false, error: true, cart : copyCarti };\n\n    case Actions.DECREMENT_COUNTER:\n      let copyCartd = state.cart;\n      copyCartd.map( e => {\n        if(e.qty>0) {\n          e.qty = e.qty - 1;\n        };\n        return e;\n      } );\n      return { ...state, loading: false, error: true, cart : copyCartd };\n\n    default:\n      return state;\n  }\n};\n\nexport default productsListReducer;\n"]},"metadata":{},"sourceType":"module"}