{"ast":null,"code":"import { takeLatest, put, all, delay, call } from 'redux-saga/effects';\nimport { FETCH_PRODUCTSLIST_REQUEST, FETCH_PRODUCTSLIST_SUCCESS, FETCH_PRODUCTSLIST_FAILURE } from './actions';\nimport { fetchProductsList } from '../../../services/cartApi';\n// Extremely simple saga that's here just as an example\nexport function* fetchProductsListSaga() {\n  console.log(`saga`);\n\n  try {\n    yield delay(1000);\n    console.log(`saga1`);\n    const response = yield call(fetchProductsList);\n    console.log(response);\n    yield put({\n      type: FETCH_PRODUCTSLIST_SUCCESS,\n      data: response\n    });\n    console.log('Succeeded fetching products list');\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: FETCH_PRODUCTSLIST_FAILURE,\n      error: e\n    });\n    console.log('Failed fetching products list');\n  }\n}\nexport function* watchFetchProductSaga() {\n  yield all([takeLatest([FETCH_PRODUCTSLIST_REQUEST], fetchProductsListSaga)]);\n}\n/*export function* incSaga() {\n  console.log(`saga-inc`);\n  try {\n    yield put({ type : INCREMENT_COUNTER });\n    console.log('Succeeded inc cart');\n  } catch (e) {\n    console.log(e);\n    console.log('Failed dec cart');\n  }\n}\n\nexport function* watchIncrementSaga() {\n  yield all([\n    takeLatest([ INCREMENT_COUNTER ], incSaga),\n  ]);\n}\n\nexport function* decSaga() {\n  console.log(`saga-dec`);\n  try {\n    yield put({ type : DECREMENT_COUNTER });\n    console.log('Succeeded dec cart');\n  } catch (e) {\n    console.log(e);\n    console.log('Failed dec cart');\n  }\n}\n\nexport function* watchDecrementSaga() {\n  yield all([\n    takeLatest([ DECREMENT_COUNTER ], decSaga),\n  ]);\n}*/\n\n/*export function* showCartSaga() {\n  console.log(`saga-show-cart`);\n  try {\n    yield put({ type : SHOW_CART });\n    console.log('Succeeded show cart');\n  } catch (e) {\n    console.log(e);\n    console.log('Failed show chart');\n  }\n}\n\nexport function* watchShowCartSaga() {\n  yield all([\n    takeLatest([ SHOW_CART ], showCartSaga),\n  ]);\n}*/","map":{"version":3,"sources":["/home/jaume/src/Projects/cart-fe/src/store/modules/products/saga.ts"],"names":["takeLatest","put","all","delay","call","FETCH_PRODUCTSLIST_REQUEST","FETCH_PRODUCTSLIST_SUCCESS","FETCH_PRODUCTSLIST_FAILURE","fetchProductsList","fetchProductsListSaga","console","log","response","type","data","e","error","watchFetchProductSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,IAAtC,QAAkD,oBAAlD;AACA,SACEC,0BADF,EAEEC,0BAFF,EAGEC,0BAHF,QAIO,WAJP;AAKA,SAASC,iBAAT,QAAkC,2BAAlC;AASA;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAa,MAAb;;AACA,MAAI;AACF,UAAMR,KAAK,CAAC,IAAD,CAAX;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAa,OAAb;AACA,UAAMC,QAAyB,GAAG,MAAMR,IAAI,CAACI,iBAAD,CAA5C;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,UAAMX,GAAG,CAAC;AAAEY,MAAAA,IAAI,EAAGP,0BAAT;AAAqCQ,MAAAA,IAAI,EAAGF;AAA5C,KAAD,CAAT;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,GAPD,CAOE,OAAOI,CAAP,EAAU;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,UAAMd,GAAG,CAAC;AAAEY,MAAAA,IAAI,EAAGN,0BAAT;AAAqCS,MAAAA,KAAK,EAAGD;AAA7C,KAAD,CAAT;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;AACF;AAED,OAAO,UAAUM,qBAAV,GAAkC;AACvC,QAAMf,GAAG,CAAC,CACRF,UAAU,CAAC,CAAEK,0BAAF,CAAD,EAAiCI,qBAAjC,CADF,CAAD,CAAT;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { takeLatest, put, all, delay, call } from 'redux-saga/effects';\nimport {\n  FETCH_PRODUCTSLIST_REQUEST,\n  FETCH_PRODUCTSLIST_SUCCESS,\n  FETCH_PRODUCTSLIST_FAILURE\n} from './actions';\nimport { fetchProductsList } from '../../../services/cartApi';\n\nexport interface Product {\n  id: number;\n  name: string;\n  customerPrice: number;\n  cost : number;\n}\n\n// Extremely simple saga that's here just as an example\nexport function* fetchProductsListSaga() {\n  console.log(`saga`);\n  try {\n    yield delay(1000);\n    console.log(`saga1`);\n    const response : Array<Product> = yield call(fetchProductsList);\n    console.log(response);\n    yield put({ type : FETCH_PRODUCTSLIST_SUCCESS, data : response });\n    console.log('Succeeded fetching products list');\n  } catch (e) {\n    console.log(e);\n    yield put({ type : FETCH_PRODUCTSLIST_FAILURE, error : e });\n    console.log('Failed fetching products list');\n  }\n}\n\nexport function* watchFetchProductSaga() {\n  yield all([\n    takeLatest([ FETCH_PRODUCTSLIST_REQUEST ], fetchProductsListSaga),\n  ]);\n}\n\n/*export function* incSaga() {\n  console.log(`saga-inc`);\n  try {\n    yield put({ type : INCREMENT_COUNTER });\n    console.log('Succeeded inc cart');\n  } catch (e) {\n    console.log(e);\n    console.log('Failed dec cart');\n  }\n}\n\nexport function* watchIncrementSaga() {\n  yield all([\n    takeLatest([ INCREMENT_COUNTER ], incSaga),\n  ]);\n}\n\nexport function* decSaga() {\n  console.log(`saga-dec`);\n  try {\n    yield put({ type : DECREMENT_COUNTER });\n    console.log('Succeeded dec cart');\n  } catch (e) {\n    console.log(e);\n    console.log('Failed dec cart');\n  }\n}\n\nexport function* watchDecrementSaga() {\n  yield all([\n    takeLatest([ DECREMENT_COUNTER ], decSaga),\n  ]);\n}*/\n\n/*export function* showCartSaga() {\n  console.log(`saga-show-cart`);\n  try {\n    yield put({ type : SHOW_CART });\n    console.log('Succeeded show cart');\n  } catch (e) {\n    console.log(e);\n    console.log('Failed show chart');\n  }\n}\n\nexport function* watchShowCartSaga() {\n  yield all([\n    takeLatest([ SHOW_CART ], showCartSaga),\n  ]);\n}*/\n"]},"metadata":{},"sourceType":"module"}