{"ast":null,"code":"import { takeLatest, put, all, delay, call } from 'redux-saga/effects';\nimport { FETCH_PRODUCTSLIST_REQUEST, fetchProductsListRequestAction, FETCH_PRODUCTSLIST_SUCCESS, FETCH_PRODUCTSLIST_FAILURE } from './actions';\nimport { fetchProductsList } from '../../../services/cartApi'; // Extremely simple saga that's here just as an example\n\nexport function* fetchProductsListSaga() {\n  console.log(`saga`);\n\n  try {\n    yield delay(1000);\n    yield put(fetchProductsListRequestAction());\n    const {\n      data\n    } = yield call(fetchProductsList);\n    yield put({\n      type: FETCH_PRODUCTSLIST_SUCCESS,\n      data: data\n    });\n    console.log('Succeeded fetching products list');\n  } catch (e) {\n    yield put({\n      type: FETCH_PRODUCTSLIST_FAILURE,\n      error: e\n    });\n    console.log('Failed fetching products list');\n  }\n}\nexport function* watchFetchProductSaga() {\n  yield all([takeLatest([FETCH_PRODUCTSLIST_REQUEST], fetchProductsListSaga)]);\n}","map":{"version":3,"sources":["/home/jaume/src/Projects/cart-fe/src/store/modules/products/saga.ts"],"names":["takeLatest","put","all","delay","call","FETCH_PRODUCTSLIST_REQUEST","fetchProductsListRequestAction","FETCH_PRODUCTSLIST_SUCCESS","FETCH_PRODUCTSLIST_FAILURE","fetchProductsList","fetchProductsListSaga","console","log","data","type","e","error","watchFetchProductSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,IAAtC,QAAkD,oBAAlD;AACA,SACEC,0BADF,EAEEC,8BAFF,EAGEC,0BAHF,EAIEC,0BAJF,QAKO,WALP;AAMA,SAASC,iBAAT,QAAkC,2BAAlC,C,CAEA;;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAa,MAAb;;AACA,MAAI;AACF,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAACK,8BAA8B,EAA/B,CAAT;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACK,iBAAD,CAA3B;AACA,UAAMR,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAGP,0BAAT;AAAqCM,MAAAA,IAAI,EAAGA;AAA5C,KAAD,CAAT;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,GAND,CAME,OAAOG,CAAP,EAAU;AACV,UAAMd,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAGN,0BAAT;AAAqCQ,MAAAA,KAAK,EAAGD;AAA7C,KAAD,CAAT;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;AACF;AAED,OAAO,UAAUK,qBAAV,GAAkC;AACvC,QAAMf,GAAG,CAAC,CACRF,UAAU,CAAC,CAAEK,0BAAF,CAAD,EAAiCK,qBAAjC,CADF,CAAD,CAAT;AAGD","sourcesContent":["import { takeLatest, put, all, delay, call } from 'redux-saga/effects';\nimport {\n  FETCH_PRODUCTSLIST_REQUEST,\n  fetchProductsListRequestAction,\n  FETCH_PRODUCTSLIST_SUCCESS,\n  FETCH_PRODUCTSLIST_FAILURE\n} from './actions';\nimport { fetchProductsList } from '../../../services/cartApi';\n\n// Extremely simple saga that's here just as an example\nexport function* fetchProductsListSaga() {\n  console.log(`saga`);\n  try {\n    yield delay(1000);\n    yield put(fetchProductsListRequestAction());\n    const { data } = yield call(fetchProductsList);\n    yield put({ type : FETCH_PRODUCTSLIST_SUCCESS, data : data });\n    console.log('Succeeded fetching products list');\n  } catch (e) {\n    yield put({ type : FETCH_PRODUCTSLIST_FAILURE, error : e });\n    console.log('Failed fetching products list');\n  }\n}\n\nexport function* watchFetchProductSaga() {\n  yield all([\n    takeLatest([ FETCH_PRODUCTSLIST_REQUEST ], fetchProductsListSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}